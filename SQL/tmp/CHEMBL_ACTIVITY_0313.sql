CREATE OR REPLACE VIEW VIEW_COMPONENT_GO 
    AS
        SELECT 
            REPLACE(WM_CONCAT(GO_ID),',',';') AS GO_ID ,  
            M.COMPONENT_ID 
        FROM 
            COMPONENT_GO M 
        GROUP BY 
            M.COMPONENT_ID;

CREATE OR REPLACE VIEW VIEW_COMP_SYNONYMS_UNIPROT 
    AS
        SELECT 
            WM_CONCAT(COMPONENT_SYNONYM) AS COMPONENT_SYNONYM, 
            A.COMPONENT_ID 
        FROM 
            COMPONENT_SYNONYMS A 
        WHERE 
            SYN_TYPE='UNIPROT'  
        GROUP BY 
            A.COMPONENT_ID;

CREATE OR REPLACE VIEW VIEW_COMP_SYNONYMS_GS 
    AS
        SELECT 
            WM_CONCAT(COMPONENT_SYNONYM) AS COMPONENT_SYNONYM, 
            A.COMPONENT_ID 
        FROM 
            COMPONENT_SYNONYMS A 
        WHERE 
            SYN_TYPE='GENE_SYMBOL'  
        GROUP BY 
            A.COMPONENT_ID;

CREATE OR REPLACE VIEW VIEW_COMPOUND_RECORDS 
    AS
        SELECT 
            (RTRIM(XMLAGG(XMLPARSE(CONTENT a.compound_name || ',' WELLFORMED)) .GETCLOBVAL(), ','),',',';') compound_name,
            A.MOLREGNO 
        FROM 
            COMPOUND_RECORDS A 
        GROUP BY 
            A.MOLREGNO;



CREATE OR REPLACE VIEW EXTRACT1_M AS
SELECT
           A.ACTIVITY_ID,A.ASSAY_ID AS ACTIVITY_ASSAY_ID,A.DOC_ID AS ACTIVITY_DOC_ID,A.RECORD_ID AS ACTIVITY_RECORD_ID,A.MOLREGNO AS ACTIVITY_MOLREGNO,
           H.COMPOUND_NAME AS ACTIVITY_COMPOUND_SYNONYM, A.STANDARD_RELATION AS ACTIVITY_STANDARD_RELATION, A.STANDARD_VALUE AS ACTIVITY_STANDARD_VALUE,
           A.STANDARD_UNITS AS ACTIVITY_STANDARD_UNITS, A.STANDARD_FLAG AS ACTIVITY_STANDARD_FLAG, A.STANDARD_TYPE AS ACTIVITY_STANDARD_TYPE,
           A.ACTIVITY_COMMENT, A.DATA_VALIDITY_COMMENT AS ACTIVITY_DATA_VALIDITY_COMMENT, A.POTENTIAL_DUPLICATE AS ACTIVITY_POTENTIAL_DUPLICATE,
           A.BAO_ENDPOINT AS ACTIVITY_BAO_ENDPOINT_ID, B.DESCRIPTION AS ASSAY_DESCRIPTION, B.ASSAY_TYPE AS ASSAY_TYPE_ID, D.ASSAY_DESC AS ASSAY_TYPE_DESC,
           B.ASSAY_TEST_TYPE, B.ASSAY_CATEGORY, B.ASSAY_ORGANISM, TRUNC(B.ASSAY_TAX_ID)AS ASSAY_TAX_ID, B.ASSAY_STRAIN, B.ASSAY_TISSUE, B.ASSAY_CELL_TYPE,
           B.ASSAY_SUBCELLULAR_FRACTION, B.TID AS ASSAY_TID, B.RELATIONSHIP_TYPE AS ASSAY_RELATIONSHIP_TYPE_ID, B.CONFIDENCE_SCORE AS ASSAY_CONFIDENCE_SCORE,
           B.SRC_ID AS ASSAY_SRC_ID, B.SRC_ASSAY_ID, B.CHEMBL_ID AS ASSAY_CHEMBL_ID, B.CELL_ID AS ASSAY_CELL_ID, B.BAO_FORMAT AS ASSAY_BAO_FORMAT,
           F.LABEL AS BAO_LABEL,E.SITE_NAME AS BINDING_SITE_NAME, B.VARIANT_ID AS ASSAY_VARIANT_ID, C.PARAMETER_TYPE AS ASSAY_PARAMETER_TYPE,
           C.PARAMETER_VALUE AS ASSAY_PARAMETER_VALUE, B.TISSUE_ID AS ASSAY_TISSUE_ID, O.UBERON_ID AS TISSUE_UBERON_ID, O.PREF_NAME AS TISSUE_PREF_NAME,
           P.CHEMBL_ID AS TISSUE_CHEMBL_ID, G.CELL_NAME, G.CELL_DESCRIPTION, G.CELL_SOURCE_TISSUE, G.CELL_SOURCE_ORGANISM, G.CELL_SOURCE_TAX_ID,
           G.CLO_ID AS CELL_CLO_ID, G.EFO_ID AS CELL_EFO_ID, G.CELLOSAURUS_ID AS CELL_CELLOSAURUS_ID, G.CL_LINCS_ID AS CELL_CL_LINCS_ID,
           G.CHEMBL_ID AS CELL_CHEMBL_ID, I.TID AS TARGET_TYPE, I.PREF_NAME AS TARGET_PREF_NAME, J.TARGET_DESC, I.CHEMBL_ID AS TARGET_CHEMBL_ID,
           I.TAX_ID AS TARGET_TAX_ID, I.ORGANISM AS TARGET_ORGANISM, I.SPECIES_GROUP_FLAG AS TARGET_SPECIES_GROUP_FLAG, K.COMPONENT_ID AS COMP_COMPONENT_ID,
           L.DESCRIPTION AS COMP_DESCRIPTION, Q.COMPONENT_SYNONYM AS COMP_UNIPROT_NAME, R.COMPONENT_SYNONYM AS COMP_GENE_SYMBOL,
           L.COMPONENT_TYPE AS COMP_TYPE, N.COMP_CLASS_ID, L.ACCESSION AS COMP_ACCESSION, L.SEQUENCE AS COMP_SEQUENCE, L.SEQUENCE_MD5SUM AS COMP_SEQUENCE_MD5SUM,
           L.TAX_ID AS COMP_TAX_ID, L.ORGANISM AS COMP_ORGANISM, L.DB_SOURCE AS COMP_DB_SOURCE, L.DB_VERSION AS COMP_DB_VERSION,
           N.PROTEIN_CLASS_ID, S.PREF_NAME AS PROTEIN_PREF_NAME, S.SHORT_NAME AS PROTEIN_SHORT_NAME, S.PROTEIN_CLASS_DESC AS PROTEIN_CLASS_DESC,
           S.DEFINITION AS PROTEIN_DEFINITION, S.CLASS_LEVEL AS PROTEIN_CLASS_LEVEL,
           M.GO_ID AS COMP_GO_ID
    FROM
        ((((((((((((((((((ACTIVITIES A LEFT OUTER JOIN ASSAYS B ON A.ASSAY_ID = B.ASSAY_ID)
        LEFT OUTER JOIN ASSAY_PARAMETERS C ON A.ASSAY_ID = C.ASSAY_ID)
        LEFT OUTER JOIN ASSAY_TYPE D ON D.ASSAY_TYPE = B.ASSAY_TYPE)
        LEFT OUTER JOIN BINDING_SITES E ON E.TID = B.TID)
        LEFT OUTER JOIN BIOASSAY_ONTOLOGY F ON F.BAO_ID = B.BAO_FORMAT)
        LEFT OUTER JOIN VIEW_COMPOUND_RECORDS H ON H.MOLREGNO = A.MOLREGNO)
        LEFT OUTER JOIN TISSUE_DICTIONARY O ON O.TISSUE_ID = B.TISSUE_ID)
        LEFT OUTER JOIN CELL_DICTIONARY G ON G.CELL_ID = B.CELL_ID)
        LEFT OUTER JOIN DOCS P ON P.DOC_ID = A.DOC_ID)
        LEFT OUTER JOIN TARGET_DICTIONARY I ON I.TID = B.TID)
        LEFT OUTER JOIN TARGET_TYPE J ON J.TARGET_TYPE = I.TARGET_TYPE)
        LEFT OUTER JOIN TARGET_COMPONENTS K ON K.TID = I.TID)
        LEFT OUTER JOIN COMPONENT_SEQUENCES L ON L.COMPONENT_ID = K.COMPONENT_ID)
        LEFT OUTER JOIN COMPONENT_CLASS N ON N.COMPONENT_ID = L.COMPONENT_ID)
        LEFT OUTER JOIN PROTEIN_CLASSIFICATION S ON S.PROTEIN_CLASS_ID = N.PROTEIN_CLASS_ID)
        LEFT OUTER JOIN VIEW_COMPONENT_GO M ON M.COMPONENT_ID = L.COMPONENT_ID)
        LEFT OUTER JOIN VIEW_COMP_SYNONYMS_UNIPROT Q ON Q.COMPONENT_ID = L.COMPONENT_ID)
        LEFT OUTER JOIN VIEW_COMP_SYNONYMS_GS R ON R.COMPONENT_ID = L.COMPONENT_ID);

